plugins {
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'jacoco'
    id 'java'
}

apply plugin: 'org.sonarqube'

sonarqube {
    properties {
        property "sonar.sources", "src/main/java"
        property "sonar.tests", "src/test/java"
        property "sonar.java.binaries", "build/classes/java/main"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
    }
}

dependencies {
    implementation project(':common')

    implementation 'org.springframework.boot:spring-boot-starter-security'

    // JPA & DB
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // s3
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.696'

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // 테스트용으로 api 모듈 참조
    testImplementation project(':api')
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}

jacoco {
    toolVersion = "0.8.10"
}

tasks.named('test') {
    useJUnitPlatform()
    systemProperty 'spring.profiles.active', 'test'
    systemProperty 'spring.config.location', 'classpath:/yaml/'
    systemProperty 'spring.config.name', 'application,application-secret,application-test'

    finalizedBy(tasks.named('jacocoTestReport'))
}

tasks.named('jacocoTestReport') {
    dependsOn(tasks.named('test'))
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
}