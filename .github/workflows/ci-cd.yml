name: Coupang Clone - CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ develop, main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. GitHub Repository Checkout
      - name: Checkout source code
        uses: actions/checkout@v3

      # 2. JDK 17 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      # 3. Gradle 캐싱
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}

      # 4. gradlew 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # 5. Gradle Build 실행 (테스트 제외)
      - name: Build with Gradle
        run: ./gradlew clean build -x test

      # 6. EC2 키 저장 및 JAR 전송
      - name: Save EC2 private key
        run: |
          echo "${{ secrets.EC2_KEY }}" > ec2_key.pem
          chmod 600 ec2_key.pem

      - name: Check built JAR files
        run: ls -alh build/libs
        
      - name: Decode application.yml from GitHub Secrets
        run: |
          echo "${{ secrets.APPLICATION_YML }}" | base64 --decode > application.yml        

      - name: Deploy JAR file to EC2
        run: |
          scp -i ec2_key.pem -o StrictHostKeyChecking=no build/libs/*.jar ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USERNAME }}/
          scp -i ec2_key.pem -o StrictHostKeyChecking=no application.yml ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USERNAME }}/

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      # 1. EC2에 JAR 파일 복사 확인
      - name: Verify JAR files exist on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            ls -alh /home/${{ secrets.EC2_USERNAME }} || echo "JAR files not found!"

      # 2. EC2에서 앱 종료 후 재시작
      - name: SSH into EC2 and restart app
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          script: /home/ec2-user/start.sh
          
      # 3. 로그 확인
      - name: Monitor app logs
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          script: tail -
