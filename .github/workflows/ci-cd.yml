name: Coupang Clone - CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ develop, main ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build and test with Gradle
        run: ./gradlew clean build

      - name: Save EC2 private key
        run: |
          echo "${{ secrets.EC2_KEY }}" > ec2_key.pem
          chmod 600 ec2_key.pem

      - name: Check built JAR files
        run: ls -alh build/libs

      - name: Deploy JAR to EC2
        run: |
          scp -i ec2_key.pem -o StrictHostKeyChecking=no build/libs/*.jar \
          ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USERNAME }}/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || (github.event_name == 'pull_request' && github.base_ref == 'main')

    steps:
      - name: SSH into EC2, create application-secret.yml and restart app
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            echo "[INFO] Writing application-secret.yml manually with echo..."
            
            echo "spring:" > /home/${{ secrets.EC2_USERNAME }}/application-secret.yml
            echo "  datasource:" >> /home/${{ secrets.EC2_USERNAME }}/application-secret.yml
            echo "    password: \"${{ secrets.DB_PASSWORD }}\"" >> /home/${{ secrets.EC2_USERNAME }}/application-secret.yml
            echo "cloud:" >> /home/${{ secrets.EC2_USERNAME }}/application-secret.yml
            echo "  aws:" >> /home/${{ secrets.EC2_USERNAME }}/application-secret.yml
            echo "    credentials:" >> /home/${{ secrets.EC2_USERNAME }}/application-secret.yml
            echo "      access-key: \"${{ secrets.S3_ACCESS_KEY }}\"" >> /home/${{ secrets.EC2_USERNAME }}/application-secret.yml
            echo "      secret-key: \"${{ secrets.S3_SECRET_KEY }}\"" >> /home/${{ secrets.EC2_USERNAME }}/application-secret.yml
            echo "    s3:" >> /home/${{ secrets.EC2_USERNAME }}/application-secret.yml
            echo "      bucket: \"${{ secrets.S3_BUCKET }}\"" >> /home/${{ secrets.EC2_USERNAME }}/application-secret.yml
            echo "jwt:" >> /home/${{ secrets.EC2_USERNAME }}/application-secret.yml
            echo "  secret: \"${{ secrets.JWT_SECRET }}\"" >> /home/${{ secrets.EC2_USERNAME }}/application-secret.yml
            
            echo "[INFO] Restarting Spring Boot application..."
            /home/ec2-user/start.sh

      - name: Monitor app logs
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          script: tail -n 100 /home/ec2-user/app.log
